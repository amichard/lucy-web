version: "3.5"

services:
# Application API Container and service
 app_api:
  image: ${PROJECT_NAME}-${TAG}-api-img
  container_name: ${PROJECT_NAME}-${TAG}-api
  build:
   context: ./api_sources
   dockerfile: .build/Dockerfile.local
  ports:
   - ${API_PORT}:${API_PORT}
  environment:
    - PORT=${API_PORT}
    - DB_HOST=${DB_HOST}
    - DB_USER=${DB_USER}
    - DB_PASS=${DB_PASS}
    - DB_PORT=${DB_PORT}
    - DB_DATABASE=${DB_DATABASE}
    - APP_CERTIFICATE_URL=${APP_CERTIFICATE_URL}
    - VERSION=${VERSION}
  volumes:
    - ./api_sources:/opt/app-root/src
  networks:
  - local-network
  links:
    - db
  depends_on:
    - db
  restart: always
  command: ["npm", "run", "hotload"]
# Application Local Database Container and service
 db:
  image: ${PROJECT_NAME}-${TAG}-postgress-img
  container_name: ${PROJECT_NAME}-${TAG}-db
  build:
    context: ./.docker/db
    dockerfile: Dockerfile.local
  ports:
    - 5432:5432
  environment:
    - POSTGRES_USER=${DB_USER}
    - POSTGRES_PASSWORD=${DB_PASS}
    - POSTGRES_DB=${DB_DATABASE}
  networks:
    - local-network
  volumes:
    - postgres:/var/lib/postgresql/data
# Application Local NGINX Service
 nginx:
  image: ${PROJECT_NAME}-${TAG}-nginx-img
  container_name: ${PROJECT_NAME}-${TAG}-nginx
  build:
    context: ./.docker/nginx
    dockerfile: Dockerfile
  restart: always
  ports:
    - 80:80
  depends_on:
    - db
    - app_api
  networks:
    - local-network
# Application Web component
 app:
  image: ${PROJECT_NAME}-${TAG}-app-img
  container_name: ${PROJECT_NAME}-${TAG}-app
  build:
    context: ../app/lucy
    dockerfile: .build/Dockerfile.local
  ports:
    - ${APP_PORT}:${APP_PORT}
    - 3030:3030
  volumes: 
   - ../app/lucy/src:/opt/app-root/src/src
  networks:
    - local-network
  depends_on:
    - nginx
  environment:
    - APP_PORT=${APP_PORT}
    - LOCAL_API_HOST=app_api:${API_PORT}
    
# Application Local docker network
networks:
 local-network:
  driver: bridge
  name: ${PROJECT_NAME}-${TAG}-network
volumes:
  postgres:
    name: ${PROJECT_NAME}-${TAG}-vol-postgres
 
