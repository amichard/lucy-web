swagger: '2.0'
info:
  description: API server for Lucy-
  version: 1.0.0-oas3
  title: Lucy-API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: pathfinder.bc.gov
basePath: /pathfinder.bc.gov/api/1.0.0
tags:
  - name: api
    description: Secure API description for Lucy
  - name: developers
    description: Operations available to regular developers
  - name: users
    description: Users of lucy
  - name: admin
    description: Admin of Lucy
  - name: observation
    description: Observation endpoints
  - name: sme
    description: Subject matter expert
schemes:
  - https
  - http
paths:
  /api/me:
    get:
      tags:
        - api
        - users
      summary: User information
      description: API to get user profile information
      operationId: me
      produces:
        - application/json
      parameters:
        - in: header
          name: token
          type: string
          description: JWT Token
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserInfo'
        '401':
          description: Unauthorize user
          schema:
            $ref: '#/definitions/Error'
  /api/observation:
    post:
      tags:
        - observation
        - sme
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorize user
          schema:
            $ref: '#/definitions/Error'
definitions:
  User:
    type: object
    required:
      - user_id
      - email
      - firstName
      - lastName
      - preferredUsername
      - currentSessionId
      - accountStatus
      - roles
      - isAdmin
      - updateAt
      - createdAt
    properties:
      user_id:
        type: number
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      preferredUsername:
        type: string
      currentSessionId:
        type: number
      accountStatus:
        type: number
      roles:
        type: object
      isAdmin:
        type: boolean
      updateAt:
        type: string
      createdAt:
        type: string
  UserSession:
    type: object
    required:
      - updateAt
      - createdAt
    properties:
      updateAt:
        type: string
      createdAt:
        type: string
  RolesCode:
    type: object
    required:
      - updateAt
      - createdAt
    properties:
      updateAt:
        type: string
      createdAt:
        type: string
  SessionActivityCode:
    type: object
    required:
      - updateAt
      - createdAt
    properties:
      updateAt:
        type: string
      createdAt:
        type: string
  SessionActivity:
    type: object
    required:
      - updateAt
      - createdAt
    properties:
      updateAt:
        type: string
      createdAt:
        type: string
  RequestAccess:
    type: object
    required:
      - updateAt
      - createdAt
    properties:
      updateAt:
        type: string
      createdAt:
        type: string
  UserMessage:
    type: object
    required:
      - message_id
      - type
      - status
      - receiver
      - creator
      - updateAt
      - createdAt
    properties:
      message_id:
        type: number
      title:
        type: string
      body:
        type: string
      type:
        type: number
      status:
        type: number
      receiver:
        type: object
        $ref: '#/definitions/User'
      creator:
        type: object
        $ref: '#/definitions/User'
      updateAt:
        type: string
      createdAt:
        type: string
  Error:
    required:
      - message
      - errors
    properties:
      message:
        type: string
      errors:
        type: array
  UserInfo:
    required:
      - message
      - data
    properties:
      message:
        type: string
      data:
        type: object
        $ref: '#/definitions/User'
